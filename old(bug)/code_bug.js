Map.addLayer(study_area,{color:'#585566'},'East Godavrari',true,0.8)
Map.centerObject(study_area,8)
var builtup=sentinel2.select('B12','B11','B4').filterDate('2025-01-01','2025-03-31').filterMetadata('CLOUDY_PIXEL_PERCENTAGE','less_than',2).mean().clip(study_area)
var agriculture=sentinel2.select('B11','B8','B2').filterDate('2025-01-01','2025-03-31').filterMetadata('CLOUDY_PIXEL_PERCENTAGE','less_than',2).mean().clip(study_area)
var Forest=sentinel2.select('B8A','B11','B4').filterDate('2025-01-01','2025-03-31').filterMetadata('CLOUDY_PIXEL_PERCENTAGE','less_than',2).mean().clip(study_area)
var grass_grazing=sentinel2.select('B8','B11','B2').filterDate('2025-01-01','2025-03-31').filterMetadata('CLOUDY_PIXEL_PERCENTAGE','less_than',2).mean().clip(study_area)
var barren_salt_sandy_rocky=sentinel2.select('B12','B11','B2').filterDate('2025-01-01','2025-03-31').filterMetadata('CLOUDY_PIXEL_PERCENTAGE','less_than',2).mean().clip(study_area)
var SFCC=sentinel2.select('B8','B4','B3').filterDate('2025-01-01','2025-03-31').filterMetadata('CLOUDY_PIXEL_PERCENTAGE','less_than',2).mean().clip(study_area)
var tcc=sentinel2.select('B4','B3','B2').filterDate('2025-01-01','2025-03-31').filterMetadata('CLOUDY_PIXEL_PERCENTAGE','less_than',2).mean().clip(study_area)
Map.addLayer(builtup,{min:152.63636363636363,max:3453.2727272727275,gamma: 1.5},'Builtup / Urban / Mining')
Map.addLayer(agriculture,{min:259.09090909090907,max:3587.7272727272725},'Crop, Plant, Fallow Land')
Map.addLayer(Forest,{min:259.09090909090907,max:4102.636363636364},'Forests - Evergreen,Deciduous')
Map.addLayer(grass_grazing,{min:259.09090909090907,max:3587.7272727272725},'Grassland, Grazing')
Map.addLayer(barren_salt_sandy_rocky,{min:182.45454545454547,max:3548.625},'Barren, Salt, Sandy, Rocky')
Map.addLayer(SFCC,{min:493.22727272727275,max:3587.7272727272725},'SFCC')
Map.addLayer(tcc,{min:529.8888888888889,max:2760.75,gamma:1.33},'TCC')
var training_points= Waterbodies.merge(Urban).merge(Crop_land).merge(sandy)
var training_data=SFCC.sampleRegions({collection:training_points,
                                                properties:['CLASS'],
                                                scale:30})
var ML=ee.Classifier.smileCart()
var classification=ML.train(training_data,
                            'CLASS',
                            ['B8','B4','B3'])
var lulc=SFCC.classify(classification)
Map.addLayer(lulc,{},'East Godavari')
Map.centerObject(study_area,11)                                              